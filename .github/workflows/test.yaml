name: PR Test

on:
  pull_request:
  
permissions:
  contents: read
  id-token: write

jobs: 

  terraform-init: 
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: tf_test/terraform-google-vault

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set Up Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          create_credentials_file: true
          workload_identity_provider: projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.WORKLOAD_POOL }}/providers/${{ secrets.WORKLOAD_PROVIDER }}
          service_account: ${{ secrets.CLOUD_RUN_SA }}
          token_format: 'access_token'
          id_token_audience: ${{ secrets.CLOUD_RUN_URL_WITHOUT_PATH }}

      - name: chk
        id: chk
        run: |
            ls -al
          
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
            
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init


      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        continue-on-error: false
        shell: bash
        # terraform plan -var 'project_id=${{ secrets.GCP_PROJECT_NUMBER }}' -no-color -detailed-exitcode -out=tfplan 2>&1 | tee tf_plan_output.txt 
        run: |
          terraform plan -var 'project_id=${{ secrets.GCP_PROJECT_NUMBER }}' -no-color  > ../tf_plan_output.txt || echo "tf plan failed but still continuing"
        # if grep -q "Terraform will perform the following actions:" tf_plan_output.txt; then
        #   echo "has_changes to true"
        #   echo "has_changes=true" >> $GITHUB_OUTPUT
        # else
        #   echo "Setting has_changes to false"
        #   echo "has_changes=false" >> $GITHUB_OUTPUT
        # fi

      - name: List changed files
        id: list
        run: |
          echo "::set-output name=files::\
              $(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} \
              ${{ github.event.pull_request.head.sha }} \
              | tr '\n' ' ')"

      - name: Archive changed files
        run: |
          tar czf changed_files.tar.gz ${{ steps.list.outputs.files }} ../tf_plan_output.txt

      - name: Invoke GenAI Cloud Run
        env:
          CLOUD_RUN_URL: ${{ secrets.CLOUD_RUN_URL }}
          PR_NUMBER:    ${{ github.event.pull_request.number }}
          REPO_FULL:    ${{ github.repository }}
        run: |
          ID_TOKEN=${{ steps.auth.outputs.access_token }}
          curl -v -X POST "$CLOUD_RUN_URL" \
            -H "Authorization: Bearer $ID_TOKEN" \
            -H "Content-Type: application/gzip" \
            -H "X-PR-Number: $PR_NUMBER" \
            -H "X-Repo: $REPO_FULL"   \
            --data-binary @changed_files.tar.gz